import "../Field-node/Sensor.thingml"



thing SensorServer includes SensorMsgs {


property reading : String

 	property fallReport : String
 	
 	
 	
 	function initialize() @abstract "true" do end

	//required port sensor_service 
	//@public "true" 
	//{
	//	sends start_periodic_reading, reading_cancel, read 
	//	receives reading, ready
	//}
	
	required port sensor_mqtt 
	@public "true" 
	@external "true"
	{ 
		receives readingJson
	}
	
	provided port smarttracker 
	@public "true" 
	@external "true"
	{
	 		sends reading
	 		receives read
	}
	
	provided port fall 
	@public "true" 
	@external "true"
	{
	 		sends fall
	}
	
	function fallControl(fallReport : String) @abstract "true" : String do end
	
	statechart Server init reading {
               
        state reading {
        
         	on entry do
         		initialize()
         		print "Server starting!\n"
         	end
            
            internal event readingJson : sensor_mqtt?readingJson
            action do
            	print "Sensor reading"
                print readingJson.value
                fallReport = fallControl(readingJson.value)
                if(not(fallReport==""))
                do                                            
            		print("to send")
            		smarttracker!reading(fallReport)
                end                            
            end     
        }
    }

  
}
