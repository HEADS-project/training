//import "SensorJS.thingml"
import "SensorBMP280JS.thingml"
import "SensorTimerJS.thingml"
import "Filter.thingml"
import "DecoderFilter.thingml"
import "ComparatorNew.thingml"

protocol kevoree;

thing FieldNodeJS {

}


configuration FieldNode 
@kevscript "C:/Users/KnutEilif/Heads_13.02/workspace/Training/3.Wrapping_ThingML_into_Kevoree/3.3_Contrib/Tellu/Field-node/kevs/dynFieldNode.kevs"
{
    instance timer : SensorTimerJS
    instance sensor : SensorJS 
    instance pfilter : DecoderFilter 
    instance comparator : ComparatorNew @debug "false"
    connector sensor.timer => timer.timer
    //connector pfilter.decoder => sensor.decoder 
    connector sensor.filtered => pfilter.filtered 
    connector comparator.comparedInternal => comparator.comparedInternalRec
    connector comparator.ref => pfilter.filtered
    connector sensor.filtered => comparator.compared
    
    
    instance ble : BLE
	instance decoder : Decoder 
	instance blefilter : DecoderFilter
	connector ble.BLEInternalRec => ble.BLEInternal
	connector decoder.BLE => ble.BLE
	connector blefilter.decoder => decoder.decoder
	connector comparator.ble => blefilter.filtered
	connector sensor.filtered => blefilter.filtered
	connector sensor.sensor_mqtt over kevoree 
	
	
	
	
	//connector blefilter.decoder => sensor.decoder
	//instance pfilter : Filter  //to be commented out
	//connector pfilter.output => pfilter.outputRecv //to be commented out
}
