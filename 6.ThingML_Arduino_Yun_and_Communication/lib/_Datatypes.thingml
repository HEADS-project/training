datatype Char<1>	
	@c_type "char"
	@c_byte_size "1";
	
object String
	@c_type "char *"
	@c_byte_size "*"
	@java_type "String"
    @js_type "String"
    @SenML_type "String";
    
datatype Boolean<1>	
	@c_type "uint8_t"
	@c_byte_size "1";

datatype UInt8<1>	
	@c_type "uint8_t"
	@c_byte_size "1";
	
datatype UInt16<2>	
	@c_type "uint16_t"
	@c_byte_size "2";
	
datatype Int16<2>	
	@c_type "int16_t"
	@c_byte_size "2";
	
datatype UInt32<4>	
	@c_type "uint32_t"
	@c_byte_size "4";

datatype Integer<2>	
	@c_type "int16_t"
	@c_byte_size "2";

datatype IntegerF<4>	
	@c_type "int"
	@c_byte_size "4";
	
datatype Long<4>	
	@c_type "long"
	@c_byte_size "4";

datatype Double<8>	
	@c_type "double"
	@c_byte_size "8";

datatype Float<4>	
	@c_type "float"
	@c_byte_size "4";
	
enumeration DigitalState 
    @c_byte_size "1"
	@c_type "uint8_t"
{
	LOW @enum_val "0"
	HIGH @enum_val "1"
}
    
datatype Byte<1>	
	@c_type "uint8_t"
	@c_byte_size "1"
	@java_type "byte"
	@java_primitive "true"
    @scala_type "Byte"
    @SenML_type "Double";

enumeration DigitalState 
  @c_type "uint8_t"
  @c_byte_size "1"
{
  LOW @enum_val "0"
  HIGH @enum_val "1"
}
	
thing fragment ThingMLSchedulerMsg {
	message setup();
	message poll();
}

thing ThingMLScheduler includes ThingMLSchedulerMsg 
{
	provided port Polling {
		sends poll, setup
	}
}
